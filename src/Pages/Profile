import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { User, Save, Shield } from "lucide-react";

const avatarColors = [
  "#0EA5E9", "#06B6D4", "#10B981", "#F59E0B", "#EF4444",
  "#8B5CF6", "#EC4899", "#6366F1", "#14B8A6", "#F97316"
];

export default function Profile() {
  const queryClient = useQueryClient();

  const { data: user } = useQuery({
    queryKey: ['currentUser'],
    queryFn: () => base44.auth.me(),
  });

  const [formData, setFormData] = useState({
    anonymous_username: user?.anonymous_username || "",
    avatar_color: user?.avatar_color || "#0EA5E9"
  });

  React.useEffect(() => {
    if (user) {
      setFormData({
        anonymous_username: user.anonymous_username || "",
        avatar_color: user.avatar_color || "#0EA5E9"
      });
    }
  }, [user]);

  const updateMutation = useMutation({
    mutationFn: (data) => base44.auth.updateMe(data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['currentUser'] });
    },
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    updateMutation.mutate(formData);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-cyan-50/30">
      <div className="max-w-3xl mx-auto px-4 md:px-8 py-8 md:py-12">
        <div className="mb-10">
          <h1 className="text-4xl md:text-5xl font-bold text-slate-800 mb-3 tracking-tight">
            Profile Settings
          </h1>
          <p className="text-lg text-slate-600">
            Customize your anonymous identity on the platform
          </p>
        </div>

        <div className="mb-6 p-4 bg-gradient-to-r from-teal-50 to-cyan-50 rounded-2xl border border-teal-100">
          <div className="flex items-start gap-3">
            <div className="w-8 h-8 bg-teal-500 rounded-full flex items-center justify-center flex-shrink-0">
              <Shield className="w-4 h-4 text-white" />
            </div>
            <div>
              <h4 className="font-semibold text-sm text-slate-800 mb-1">Privacy Note</h4>
              <p className="text-sm text-slate-600 leading-relaxed">
                Your real name and email are never shown to other users. Only your anonymous username is visible on posts and comments.
              </p>
            </div>
          </div>
        </div>

        <Card className="border-slate-200 shadow-xl bg-white/80 backdrop-blur-sm">
          <CardHeader className="border-b border-slate-100 pb-6">
            <CardTitle className="text-2xl font-bold text-slate-800 flex items-center gap-2">
              <User className="w-6 h-6 text-cyan-500" />
              Anonymous Profile
            </CardTitle>
          </CardHeader>
          <CardContent className="pt-6">
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="space-y-2">
                <Label htmlFor="anonymous_username" className="text-sm font-semibold text-slate-700">
                  Anonymous Username
                </Label>
                <Input
                  id="anonymous_username"
                  value={formData.anonymous_username}
                  onChange={(e) => setFormData(prev => ({ ...prev, anonymous_username: e.target.value }))}
                  placeholder="Choose an anonymous name"
                  className="h-12 border-slate-200 rounded-xl"
                />
                <p className="text-xs text-slate-500">
                  This is the name others will see on your posts and comments
                </p>
              </div>

              <div className="space-y-2">
                <Label className="text-sm font-semibold text-slate-700">
                  Avatar Color
                </Label>
                <div className="grid grid-cols-5 md:grid-cols-10 gap-3">
                  {avatarColors.map(color => (
                    <button
                      key={color}
                      type="button"
                      onClick={() => setFormData(prev => ({ ...prev, avatar_color: color }))}
                      className={`w-12 h-12 rounded-full transition-all ${
                        formData.avatar_color === color 
                          ? 'ring-4 ring-slate-300 scale-110' 
                          : 'hover:scale-105'
                      }`}
                      style={{ backgroundColor: color }}
                    />
                  ))}
                </div>
              </div>

              <div className="pt-6 border-t border-slate-100">
                <div className="flex items-center gap-4 p-5 bg-slate-50 rounded-2xl mb-6">
                  <div 
                    className="w-16 h-16 rounded-full flex items-center justify-center text-white font-bold text-2xl shadow-lg"
                    style={{ backgroundColor: formData.avatar_color }}
                  >
                    {(formData.anonymous_username || 'A')[0].toUpperCase()}
                  </div>
                  <div>
                    <p className="font-semibold text-slate-800 text-lg">
                      {formData.anonymous_username || 'Anonymous User'}
                    </p>
                    <p className="text-sm text-slate-500">This is how you appear to others</p>
                  </div>
                </div>

                <Button
                  type="submit"
                  disabled={updateMutation.isPending}
                  className="w-full h-12 bg-gradient-to-r from-cyan-500 to-teal-500 hover:from-cyan-600 hover:to-teal-600 text-white rounded-xl shadow-lg shadow-cyan-500/25"
                >
                  <Save className="w-5 h-5 mr-2" />
                  {updateMutation.isPending ? 'Saving...' : 'Save Changes'}
                </Button>
              </div>
            </form>
          </CardContent>
        </Card>

        <div className="mt-6 p-5 bg-white rounded-2xl border border-slate-200 shadow-sm">
          <h3 className="font-semibold text-slate-800 mb-3">Account Information</h3>
          <div className="space-y-2 text-sm">
            <div className="flex justify-between">
              <span className="text-slate-600">Email (Private):</span>
              <span className="font-medium text-slate-800">{user?.email}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-slate-600">Account Type:</span>
              <span className="font-medium text-slate-800 capitalize">{user?.role}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}